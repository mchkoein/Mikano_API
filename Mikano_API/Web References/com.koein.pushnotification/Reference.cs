//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Mikano_API.com.koein.pushnotification {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewUserDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushToPhoneUsingUUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushToPhoneUsingEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushToPhoneOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Mikano_API.Properties.Settings.Default.ZaatarWZeitApi_com_koein_pushnotification_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddDeviceCompletedEventHandler AddDeviceCompleted;
        
        /// <remarks/>
        public event AddNewDeviceCompletedEventHandler AddNewDeviceCompleted;
        
        /// <remarks/>
        public event AddNewUserDeviceCompletedEventHandler AddNewUserDeviceCompleted;
        
        /// <remarks/>
        public event DeleteDeviceCompletedEventHandler DeleteDeviceCompleted;
        
        /// <remarks/>
        public event AddGroupCompletedEventHandler AddGroupCompleted;
        
        /// <remarks/>
        public event EditGroupCompletedEventHandler EditGroupCompleted;
        
        /// <remarks/>
        public event DeleteGroupCompletedEventHandler DeleteGroupCompleted;
        
        /// <remarks/>
        public event GetAllGroupsCompletedEventHandler GetAllGroupsCompleted;
        
        /// <remarks/>
        public event PushToPhoneUsingUUIDCompletedEventHandler PushToPhoneUsingUUIDCompleted;
        
        /// <remarks/>
        public event PushToPhoneUsingEmailCompletedEventHandler PushToPhoneUsingEmailCompleted;
        
        /// <remarks/>
        public event PushToPhoneCompletedEventHandler PushToPhoneCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Device AddDevice(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion) {
            object[] results = this.Invoke("AddDevice", new object[] {
                        applicationId,
                        groupIds,
                        token,
                        name,
                        model,
                        cordovaVersion,
                        platform,
                        uuid,
                        version,
                        appVersion});
            return ((Device)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeviceAsync(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion) {
            this.AddDeviceAsync(applicationId, groupIds, token, name, model, cordovaVersion, platform, uuid, version, appVersion, null);
        }
        
        /// <remarks/>
        public void AddDeviceAsync(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion, object userState) {
            if ((this.AddDeviceOperationCompleted == null)) {
                this.AddDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeviceOperationCompleted);
            }
            this.InvokeAsync("AddDevice", new object[] {
                        applicationId,
                        groupIds,
                        token,
                        name,
                        model,
                        cordovaVersion,
                        platform,
                        uuid,
                        version,
                        appVersion}, this.AddDeviceOperationCompleted, userState);
        }
        
        private void OnAddDeviceOperationCompleted(object arg) {
            if ((this.AddDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeviceCompleted(this, new AddDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Device AddNewDevice(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion, string language) {
            object[] results = this.Invoke("AddNewDevice", new object[] {
                        applicationId,
                        groupIds,
                        token,
                        name,
                        model,
                        cordovaVersion,
                        platform,
                        uuid,
                        version,
                        appVersion,
                        language});
            return ((Device)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewDeviceAsync(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion, string language) {
            this.AddNewDeviceAsync(applicationId, groupIds, token, name, model, cordovaVersion, platform, uuid, version, appVersion, language, null);
        }
        
        /// <remarks/>
        public void AddNewDeviceAsync(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion, string language, object userState) {
            if ((this.AddNewDeviceOperationCompleted == null)) {
                this.AddNewDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewDeviceOperationCompleted);
            }
            this.InvokeAsync("AddNewDevice", new object[] {
                        applicationId,
                        groupIds,
                        token,
                        name,
                        model,
                        cordovaVersion,
                        platform,
                        uuid,
                        version,
                        appVersion,
                        language}, this.AddNewDeviceOperationCompleted, userState);
        }
        
        private void OnAddNewDeviceOperationCompleted(object arg) {
            if ((this.AddNewDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewDeviceCompleted(this, new AddNewDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewUserDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Device AddNewUserDevice(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion, string language, string email) {
            object[] results = this.Invoke("AddNewUserDevice", new object[] {
                        applicationId,
                        groupIds,
                        token,
                        name,
                        model,
                        cordovaVersion,
                        platform,
                        uuid,
                        version,
                        appVersion,
                        language,
                        email});
            return ((Device)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewUserDeviceAsync(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion, string language, string email) {
            this.AddNewUserDeviceAsync(applicationId, groupIds, token, name, model, cordovaVersion, platform, uuid, version, appVersion, language, email, null);
        }
        
        /// <remarks/>
        public void AddNewUserDeviceAsync(string applicationId, string groupIds, string token, string name, string model, string cordovaVersion, string platform, string uuid, string version, string appVersion, string language, string email, object userState) {
            if ((this.AddNewUserDeviceOperationCompleted == null)) {
                this.AddNewUserDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewUserDeviceOperationCompleted);
            }
            this.InvokeAsync("AddNewUserDevice", new object[] {
                        applicationId,
                        groupIds,
                        token,
                        name,
                        model,
                        cordovaVersion,
                        platform,
                        uuid,
                        version,
                        appVersion,
                        language,
                        email}, this.AddNewUserDeviceOperationCompleted, userState);
        }
        
        private void OnAddNewUserDeviceOperationCompleted(object arg) {
            if ((this.AddNewUserDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewUserDeviceCompleted(this, new AddNewUserDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteDevice(string token, int applicationId) {
            object[] results = this.Invoke("DeleteDevice", new object[] {
                        token,
                        applicationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeviceAsync(string token, int applicationId) {
            this.DeleteDeviceAsync(token, applicationId, null);
        }
        
        /// <remarks/>
        public void DeleteDeviceAsync(string token, int applicationId, object userState) {
            if ((this.DeleteDeviceOperationCompleted == null)) {
                this.DeleteDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeviceOperationCompleted);
            }
            this.InvokeAsync("DeleteDevice", new object[] {
                        token,
                        applicationId}, this.DeleteDeviceOperationCompleted, userState);
        }
        
        private void OnDeleteDeviceOperationCompleted(object arg) {
            if ((this.DeleteDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeviceCompleted(this, new DeleteDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group AddGroup(int applicationId, string title) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        applicationId,
                        title});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupAsync(int applicationId, string title) {
            this.AddGroupAsync(applicationId, title, null);
        }
        
        /// <remarks/>
        public void AddGroupAsync(int applicationId, string title, object userState) {
            if ((this.AddGroupOperationCompleted == null)) {
                this.AddGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupOperationCompleted);
            }
            this.InvokeAsync("AddGroup", new object[] {
                        applicationId,
                        title}, this.AddGroupOperationCompleted, userState);
        }
        
        private void OnAddGroupOperationCompleted(object arg) {
            if ((this.AddGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group EditGroup(int id, int applicationId, string title) {
            object[] results = this.Invoke("EditGroup", new object[] {
                        id,
                        applicationId,
                        title});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void EditGroupAsync(int id, int applicationId, string title) {
            this.EditGroupAsync(id, applicationId, title, null);
        }
        
        /// <remarks/>
        public void EditGroupAsync(int id, int applicationId, string title, object userState) {
            if ((this.EditGroupOperationCompleted == null)) {
                this.EditGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGroupOperationCompleted);
            }
            this.InvokeAsync("EditGroup", new object[] {
                        id,
                        applicationId,
                        title}, this.EditGroupOperationCompleted, userState);
        }
        
        private void OnEditGroupOperationCompleted(object arg) {
            if ((this.EditGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGroupCompleted(this, new EditGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGroup(int id) {
            object[] results = this.Invoke("DeleteGroup", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(int id) {
            this.DeleteGroupAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(int id, object userState) {
            if ((this.DeleteGroupOperationCompleted == null)) {
                this.DeleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteGroup", new object[] {
                        id}, this.DeleteGroupOperationCompleted, userState);
        }
        
        private void OnDeleteGroupOperationCompleted(object arg) {
            if ((this.DeleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupCompleted(this, new DeleteGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GetAllGroups(int applicationId) {
            object[] results = this.Invoke("GetAllGroups", new object[] {
                        applicationId});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(int applicationId) {
            this.GetAllGroupsAsync(applicationId, null);
        }
        
        /// <remarks/>
        public void GetAllGroupsAsync(int applicationId, object userState) {
            if ((this.GetAllGroupsOperationCompleted == null)) {
                this.GetAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllGroups", new object[] {
                        applicationId}, this.GetAllGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllGroupsOperationCompleted(object arg) {
            if ((this.GetAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGroupsCompleted(this, new GetAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushToPhoneUsingUUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NotificationMessage PushToPhoneUsingUUID(int applicationId, string[] uuids, string message) {
            object[] results = this.Invoke("PushToPhoneUsingUUID", new object[] {
                        applicationId,
                        uuids,
                        message});
            return ((NotificationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void PushToPhoneUsingUUIDAsync(int applicationId, string[] uuids, string message) {
            this.PushToPhoneUsingUUIDAsync(applicationId, uuids, message, null);
        }
        
        /// <remarks/>
        public void PushToPhoneUsingUUIDAsync(int applicationId, string[] uuids, string message, object userState) {
            if ((this.PushToPhoneUsingUUIDOperationCompleted == null)) {
                this.PushToPhoneUsingUUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushToPhoneUsingUUIDOperationCompleted);
            }
            this.InvokeAsync("PushToPhoneUsingUUID", new object[] {
                        applicationId,
                        uuids,
                        message}, this.PushToPhoneUsingUUIDOperationCompleted, userState);
        }
        
        private void OnPushToPhoneUsingUUIDOperationCompleted(object arg) {
            if ((this.PushToPhoneUsingUUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushToPhoneUsingUUIDCompleted(this, new PushToPhoneUsingUUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushToPhoneUsingEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NotificationMessage PushToPhoneUsingEmail(int applicationId, string email, string message, string url, string buttonLabel, string goTo) {
            object[] results = this.Invoke("PushToPhoneUsingEmail", new object[] {
                        applicationId,
                        email,
                        message,
                        url,
                        buttonLabel,
                        goTo});
            return ((NotificationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void PushToPhoneUsingEmailAsync(int applicationId, string email, string message, string url, string buttonLabel, string goTo) {
            this.PushToPhoneUsingEmailAsync(applicationId, email, message, url, buttonLabel, goTo, null);
        }
        
        /// <remarks/>
        public void PushToPhoneUsingEmailAsync(int applicationId, string email, string message, string url, string buttonLabel, string goTo, object userState) {
            if ((this.PushToPhoneUsingEmailOperationCompleted == null)) {
                this.PushToPhoneUsingEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushToPhoneUsingEmailOperationCompleted);
            }
            this.InvokeAsync("PushToPhoneUsingEmail", new object[] {
                        applicationId,
                        email,
                        message,
                        url,
                        buttonLabel,
                        goTo}, this.PushToPhoneUsingEmailOperationCompleted, userState);
        }
        
        private void OnPushToPhoneUsingEmailOperationCompleted(object arg) {
            if ((this.PushToPhoneUsingEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushToPhoneUsingEmailCompleted(this, new PushToPhoneUsingEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PushToPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NotificationMessage PushToPhone(
                    int applicationId, 
                    int[] groupIds, 
                    bool sendToNeutralDevices, 
                    string[] tokens, 
                    bool sendToIOS, 
                    bool sendToAndroid, 
                    string message, 
                    string url, 
                    string key1, 
                    string key2, 
                    string key3, 
                    string key4, 
                    string key5, 
                    string key6, 
                    string key7, 
                    string key8, 
                    string key9, 
                    string key10) {
            object[] results = this.Invoke("PushToPhone", new object[] {
                        applicationId,
                        groupIds,
                        sendToNeutralDevices,
                        tokens,
                        sendToIOS,
                        sendToAndroid,
                        message,
                        url,
                        key1,
                        key2,
                        key3,
                        key4,
                        key5,
                        key6,
                        key7,
                        key8,
                        key9,
                        key10});
            return ((NotificationMessage)(results[0]));
        }
        
        /// <remarks/>
        public void PushToPhoneAsync(
                    int applicationId, 
                    int[] groupIds, 
                    bool sendToNeutralDevices, 
                    string[] tokens, 
                    bool sendToIOS, 
                    bool sendToAndroid, 
                    string message, 
                    string url, 
                    string key1, 
                    string key2, 
                    string key3, 
                    string key4, 
                    string key5, 
                    string key6, 
                    string key7, 
                    string key8, 
                    string key9, 
                    string key10) {
            this.PushToPhoneAsync(applicationId, groupIds, sendToNeutralDevices, tokens, sendToIOS, sendToAndroid, message, url, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, null);
        }
        
        /// <remarks/>
        public void PushToPhoneAsync(
                    int applicationId, 
                    int[] groupIds, 
                    bool sendToNeutralDevices, 
                    string[] tokens, 
                    bool sendToIOS, 
                    bool sendToAndroid, 
                    string message, 
                    string url, 
                    string key1, 
                    string key2, 
                    string key3, 
                    string key4, 
                    string key5, 
                    string key6, 
                    string key7, 
                    string key8, 
                    string key9, 
                    string key10, 
                    object userState) {
            if ((this.PushToPhoneOperationCompleted == null)) {
                this.PushToPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushToPhoneOperationCompleted);
            }
            this.InvokeAsync("PushToPhone", new object[] {
                        applicationId,
                        groupIds,
                        sendToNeutralDevices,
                        tokens,
                        sendToIOS,
                        sendToAndroid,
                        message,
                        url,
                        key1,
                        key2,
                        key3,
                        key4,
                        key5,
                        key6,
                        key7,
                        key8,
                        key9,
                        key10}, this.PushToPhoneOperationCompleted, userState);
        }
        
        private void OnPushToPhoneOperationCompleted(object arg) {
            if ((this.PushToPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushToPhoneCompleted(this, new PushToPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Device {
        
        private string groupsField;
        
        private int idField;
        
        private int applicationIdField;
        
        private string tokenField;
        
        private string nameField;
        
        private string emailField;
        
        private string modelField;
        
        private string cordovaVersionField;
        
        private string platformField;
        
        private string uuidField;
        
        private string versionField;
        
        private string appVersionField;
        
        private string languageField;
        
        private bool isPublishedField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        private DeviceRelatedGroup[] deviceRelatedGroupsField;
        
        private Application applicationField;
        
        /// <remarks/>
        public string Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int applicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string cordovaVersion {
            get {
                return this.cordovaVersionField;
            }
            set {
                this.cordovaVersionField = value;
            }
        }
        
        /// <remarks/>
        public string platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
            }
        }
        
        /// <remarks/>
        public string uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <remarks/>
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string appVersion {
            get {
                return this.appVersionField;
            }
            set {
                this.appVersionField = value;
            }
        }
        
        /// <remarks/>
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public bool isPublished {
            get {
                return this.isPublishedField;
            }
            set {
                this.isPublishedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public DeviceRelatedGroup[] DeviceRelatedGroups {
            get {
                return this.deviceRelatedGroupsField;
            }
            set {
                this.deviceRelatedGroupsField = value;
            }
        }
        
        /// <remarks/>
        public Application Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DeviceRelatedGroup {
        
        private int idField;
        
        private int groupIdField;
        
        private int deviceIdField;
        
        private System.DateTime dateCreatedField;
        
        private Device deviceField;
        
        private Group groupField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public int deviceId {
            get {
                return this.deviceIdField;
            }
            set {
                this.deviceIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public Device Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
            }
        }
        
        /// <remarks/>
        public Group Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Group {
        
        private int idField;
        
        private int applicationIdField;
        
        private string titleField;
        
        private bool isPublishedField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        private NotificationMessageGroup[] notificationMessageGroupsField;
        
        private DeviceRelatedGroup[] deviceRelatedGroupsField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int applicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool isPublished {
            get {
                return this.isPublishedField;
            }
            set {
                this.isPublishedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public NotificationMessageGroup[] NotificationMessageGroups {
            get {
                return this.notificationMessageGroupsField;
            }
            set {
                this.notificationMessageGroupsField = value;
            }
        }
        
        /// <remarks/>
        public DeviceRelatedGroup[] DeviceRelatedGroups {
            get {
                return this.deviceRelatedGroupsField;
            }
            set {
                this.deviceRelatedGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NotificationMessageGroup {
        
        private int idField;
        
        private int groupIdField;
        
        private int notificationMessageIdField;
        
        private System.DateTime dateCreatedField;
        
        private Group groupField;
        
        private NotificationMessage notificationMessageField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int groupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public int notificationMessageId {
            get {
                return this.notificationMessageIdField;
            }
            set {
                this.notificationMessageIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public Group Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public NotificationMessage NotificationMessage {
            get {
                return this.notificationMessageField;
            }
            set {
                this.notificationMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NotificationMessage {
        
        private string tokensField;
        
        private string soundField;
        
        private string badgeField;
        
        private int idField;
        
        private int applicationIdField;
        
        private string messageField;
        
        private string urlField;
        
        private string key1Field;
        
        private string key2Field;
        
        private string key3Field;
        
        private string key4Field;
        
        private string key5Field;
        
        private string key6Field;
        
        private string key7Field;
        
        private string key8Field;
        
        private string key9Field;
        
        private string key10Field;
        
        private string returnedMessageField;
        
        private bool sendToAndroidField;
        
        private bool sendToIPhoneField;
        
        private bool successfullySentToAndroidField;
        
        private bool successfullySentToIPhoneField;
        
        private System.DateTime dateCreatedField;
        
        private NotificationMessageGroup[] notificationMessageGroupsField;
        
        private Application applicationField;
        
        /// <remarks/>
        public string Tokens {
            get {
                return this.tokensField;
            }
            set {
                this.tokensField = value;
            }
        }
        
        /// <remarks/>
        public string Sound {
            get {
                return this.soundField;
            }
            set {
                this.soundField = value;
            }
        }
        
        /// <remarks/>
        public string Badge {
            get {
                return this.badgeField;
            }
            set {
                this.badgeField = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int applicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string key1 {
            get {
                return this.key1Field;
            }
            set {
                this.key1Field = value;
            }
        }
        
        /// <remarks/>
        public string key2 {
            get {
                return this.key2Field;
            }
            set {
                this.key2Field = value;
            }
        }
        
        /// <remarks/>
        public string key3 {
            get {
                return this.key3Field;
            }
            set {
                this.key3Field = value;
            }
        }
        
        /// <remarks/>
        public string key4 {
            get {
                return this.key4Field;
            }
            set {
                this.key4Field = value;
            }
        }
        
        /// <remarks/>
        public string key5 {
            get {
                return this.key5Field;
            }
            set {
                this.key5Field = value;
            }
        }
        
        /// <remarks/>
        public string key6 {
            get {
                return this.key6Field;
            }
            set {
                this.key6Field = value;
            }
        }
        
        /// <remarks/>
        public string key7 {
            get {
                return this.key7Field;
            }
            set {
                this.key7Field = value;
            }
        }
        
        /// <remarks/>
        public string key8 {
            get {
                return this.key8Field;
            }
            set {
                this.key8Field = value;
            }
        }
        
        /// <remarks/>
        public string key9 {
            get {
                return this.key9Field;
            }
            set {
                this.key9Field = value;
            }
        }
        
        /// <remarks/>
        public string key10 {
            get {
                return this.key10Field;
            }
            set {
                this.key10Field = value;
            }
        }
        
        /// <remarks/>
        public string returnedMessage {
            get {
                return this.returnedMessageField;
            }
            set {
                this.returnedMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool sendToAndroid {
            get {
                return this.sendToAndroidField;
            }
            set {
                this.sendToAndroidField = value;
            }
        }
        
        /// <remarks/>
        public bool sendToIPhone {
            get {
                return this.sendToIPhoneField;
            }
            set {
                this.sendToIPhoneField = value;
            }
        }
        
        /// <remarks/>
        public bool successfullySentToAndroid {
            get {
                return this.successfullySentToAndroidField;
            }
            set {
                this.successfullySentToAndroidField = value;
            }
        }
        
        /// <remarks/>
        public bool successfullySentToIPhone {
            get {
                return this.successfullySentToIPhoneField;
            }
            set {
                this.successfullySentToIPhoneField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public NotificationMessageGroup[] NotificationMessageGroups {
            get {
                return this.notificationMessageGroupsField;
            }
            set {
                this.notificationMessageGroupsField = value;
            }
        }
        
        /// <remarks/>
        public Application Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Application {
        
        private int idField;
        
        private string computerNameField;
        
        private string titleField;
        
        private string gcmApiKeyField;
        
        private string apnCertificatep12Field;
        
        private string apnCertificatePasswordField;
        
        private int badgeField;
        
        private string soundField;
        
        private string iconField;
        
        private bool isNewField;
        
        private bool isPublishedField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        private Device[] devicesField;
        
        private NotificationMessage[] notificationMessagesField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string computerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string gcmApiKey {
            get {
                return this.gcmApiKeyField;
            }
            set {
                this.gcmApiKeyField = value;
            }
        }
        
        /// <remarks/>
        public string apnCertificatep12 {
            get {
                return this.apnCertificatep12Field;
            }
            set {
                this.apnCertificatep12Field = value;
            }
        }
        
        /// <remarks/>
        public string apnCertificatePassword {
            get {
                return this.apnCertificatePasswordField;
            }
            set {
                this.apnCertificatePasswordField = value;
            }
        }
        
        /// <remarks/>
        public int badge {
            get {
                return this.badgeField;
            }
            set {
                this.badgeField = value;
            }
        }
        
        /// <remarks/>
        public string sound {
            get {
                return this.soundField;
            }
            set {
                this.soundField = value;
            }
        }
        
        /// <remarks/>
        public string icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public bool isNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public bool isPublished {
            get {
                return this.isPublishedField;
            }
            set {
                this.isPublishedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public Device[] Devices {
            get {
                return this.devicesField;
            }
            set {
                this.devicesField = value;
            }
        }
        
        /// <remarks/>
        public NotificationMessage[] NotificationMessages {
            get {
                return this.notificationMessagesField;
            }
            set {
                this.notificationMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDeviceCompletedEventHandler(object sender, AddDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Device Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Device)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddNewDeviceCompletedEventHandler(object sender, AddNewDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Device Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Device)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddNewUserDeviceCompletedEventHandler(object sender, AddNewUserDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewUserDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewUserDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Device Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Device)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDeviceCompletedEventHandler(object sender, DeleteDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddGroupCompletedEventHandler(object sender, AddGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditGroupCompletedEventHandler(object sender, EditGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteGroupCompletedEventHandler(object sender, DeleteGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllGroupsCompletedEventHandler(object sender, GetAllGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushToPhoneUsingUUIDCompletedEventHandler(object sender, PushToPhoneUsingUUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushToPhoneUsingUUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushToPhoneUsingUUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotificationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotificationMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushToPhoneUsingEmailCompletedEventHandler(object sender, PushToPhoneUsingEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushToPhoneUsingEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushToPhoneUsingEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotificationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotificationMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PushToPhoneCompletedEventHandler(object sender, PushToPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushToPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushToPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotificationMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotificationMessage)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591